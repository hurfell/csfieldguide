Carrying out this task, the aim is to find out some sorting algorithm.

bucketsort
One opportunity is the bucketsort algorithm. The main issue is dividing the big problem into smaller problems. So using the mashine, the big bucket will be divided into smaller buckets, by sorting it according to the firt digit. You will need four buckets, because there are four possible first digits. Then you sort each of these buckets according to the second digit. This algoritm has to be continued, until you reach the last bucket. Now you are able to take all the cards in the right order and your aim is claimed. Obviously you will need a lot of buckets. Foreach digit you will need four times of the numbers of buckets (Because each new digit can be four different numbers). It is an exponential increase of the numbers of buckets. The correctness of this algorithm can be seen very easily. In our case the first use of the mashine puts all the one hundred, the two hundred and so on together. Taking the one hundred bevor the two hundred and so on delivers the solution. Bevor taking the one hundred this bucket will be sorted using the same technique just with the tenner. These will be sorted using the mashine sorting according to the last digit. Obviusly this alogrithm terminates. Using the mashine a few times delivers the buckets sorted according all digits forall hundreds and tenners and so on. Taking these buckets in the right order you claime your aime.


Radixsort
Reducing the numbers of buckets you have to find a new solution with less buckets. This can be Radixsort. You just need buckets just as many as the numbers of possible digits. You start sorting according the last digit. This is called partitioning. Then you have to collect all the stacks form the left side to the right side. The next step is sorting according to the last but one digit. The mashine partions the stack again and you have to collect them the same way. Reaching the first digit you claime the aim after collecting the stacks. The fact, that this algorithm really sorts the stack, is a little bit more complicated. After sorting according the n-th digit the n-th digits are sorted. This can be shown by induction. A few hints: Sorting to the last digit you collect your stacks. All the "one" are on top of the stack. Then the "two" follows and so on. Using the mashine according the last but one digit. The mashine does not change the order of the cards in the stack. It only seperates them. One the new "bucket one" there are all tenner, but this stack has been sortet according the last digit before. So this small stack ist sorted by the last two digits. You can use the same argument for the other stacks. Taking them in the right order gives you an new Stack, which is sorted by the last two digits. This is the first step of the induction and can be repeated. You can argue like this to show the step from the last n digits to n+1 digits. The algorithm works.

Reducing the number of buckets you can force the user to find a algorithm using less space. You can not use bucketsort anymore, you have to use Radixsort, or maybe other sorting algorithms.
